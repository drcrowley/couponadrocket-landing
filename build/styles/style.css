@charset "UTF-8";
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
/*! normalize.css v4.2.0 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto-Light.eot");
  src: local("☺"), url("../fonts/Roboto-Light.woff") format("woff"), url("../fonts/Roboto-Light.ttf") format("truetype"), url("../fonts/Roboto-Light.svg#Roboto-Light") format("svg");
  font-weight: 300;
  font-style: normal; }

@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto-Regular.eot");
  src: local("☺"), url("../fonts/Roboto-Regular.woff") format("woff"), url("../fonts/Roboto-Regular.ttf") format("truetype"), url("../fonts/Roboto-Regular.svg#Roboto-Regular") format("svg");
  font-weight: 400;
  font-style: normal; }

@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto-Medium.eot");
  src: local("☺"), url("../fonts/Roboto-Medium.woff") format("woff"), url("../fonts/Roboto-Medium.ttf") format("truetype"), url("../fonts/Roboto-Medium.svg#Roboto-Medium") format("svg");
  font-weight: 500;
  font-style: normal; }

@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto-Bold.eot");
  src: local("☺"), url("../fonts/Roboto-Bold.woff") format("woff"), url("../fonts/Roboto-Bold.ttf") format("truetype"), url("../fonts/Roboto-Bold.svg#Roboto-Bold") format("svg");
  font-weight: 700;
  font-style: normal; }

html {
  font-size: 87.5%;
  height: 100%;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  text-size-adjust: 100%;
  -webkit-tap-highlight-color: transparent;
  -webkit-font-smoothing: antialiased;
  -webkit-overflow-scrolling: touch; }

body {
  font-family: 'Roboto', 'Arial', 'Helvetica', sans-serif;
  font-size: 1rem;
  line-height: 1.4;
  font-weight: 400;
  color: #000;
  height: 100%; }

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none; }

::selection {
  background: #b3d4fc;
  text-shadow: none; }

/* Slider */
.slick-slider {
  position: relative;
  display: block;
  box-sizing: border-box;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent; }

.slick-list {
  position: relative;
  overflow: hidden;
  display: block;
  margin: 0;
  padding: 0; }
  .slick-list:focus {
    outline: none; }
  .slick-list.dragging {
    cursor: pointer;
    cursor: hand; }

.slick-slider .slick-track,
.slick-slider .slick-list {
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0); }

.slick-track {
  position: relative;
  left: 0;
  top: 0;
  display: block; }
  .slick-track:before, .slick-track:after {
    content: "";
    display: table; }
  .slick-track:after {
    clear: both; }
  .slick-loading .slick-track {
    visibility: hidden; }

.slick-slide {
  float: left;
  height: 100%;
  min-height: 1px;
  display: none; }
  [dir="rtl"] .slick-slide {
    float: right; }
  .slick-slide img {
    display: block; }
  .slick-slide.slick-loading img {
    display: none; }
  .slick-slide.dragging img {
    pointer-events: none; }
  .slick-initialized .slick-slide {
    display: block; }
  .slick-loading .slick-slide {
    visibility: hidden; }
  .slick-vertical .slick-slide {
    display: block;
    height: auto;
    border: 1px solid transparent; }

.slick-arrow.slick-hidden {
  display: none; }

.slick-dots {
  position: absolute;
  bottom: 15px;
  left: 0;
  right: 0;
  text-align: center;
  list-style: none;
  margin: 0;
  padding: 0; }
  .slick-dots li {
    list-style: none;
    display: inline-block;
    vertical-align: middle;
    margin: 0 0.35714rem; }
  .slick-dots button {
    display: block;
    height: 7.5px;
    width: 7.5px;
    text-indent: 100px;
    overflow: hidden;
    background: #fff;
    border: 0;
    padding: 0;
    border-radius: 50%;
    opacity: .4;
    outline: none; }
  .slick-dots .slick-active button {
    opacity: 1; }

.advantages__holder {
  margin-left: auto;
  margin-right: auto;
  min-width: 290px;
  max-width: 1033px;
  padding-left: 1.07143rem;
  padding-right: 1.07143rem; }

.advantages__list::after {
  clear: both;
  content: "";
  display: table; }

.advantages__item {
  float: left;
  text-align: center;
  padding-left: 3.21429rem;
  padding-right: 3.21429rem;
  box-sizing: border-box;
  display: inline;
  float: left;
  width: 33.33333%;
  margin: 0 0%; }
  @media (max-width: 1024px) {
    .advantages__item {
      float: none;
      width: auto;
      padding-left: 0;
      padding-right: 0;
      display: block; }
      .advantages__item + .advantages__item {
        margin-top: 2.85714rem; } }

.advantages__icon {
  display: inline-block;
  vertical-align: middle;
  margin-bottom: 1.78571rem; }
  .advantages__icon_click {
    background-image: url(../images/sprite.png);
    background-position: -268px -113px;
    width: 51px;
    height: 59px; }
  .advantages__icon_people {
    background-image: url(../images/sprite.png);
    background-position: -268px -57px;
    width: 59px;
    height: 56px; }
  .advantages__icon_web {
    background-image: url(../images/sprite.png);
    background-position: 0px -198px;
    width: 63px;
    height: 54px; }

.advantages__title {
  color: #fff;
  font-size: 1.14286rem; }

.benefit {
  padding-top: 2.85714rem;
  padding-bottom: 5.71429rem; }
  .benefit__holder {
    margin-left: auto;
    margin-right: auto;
    min-width: 290px;
    max-width: 1033px;
    padding-left: 1.07143rem;
    padding-right: 1.07143rem; }
  .benefit__list {
    overflow: hidden; }
  .benefit__row::after {
    clear: both;
    content: "";
    display: table; }
  .benefit__row + .benefit__row {
    margin-top: 2.71429rem; }
    @media (max-width: 1024px) {
      .benefit__row + .benefit__row {
        margin-top: 0; } }
  .benefit__head {
    margin: 0;
    text-align: center;
    font-size: 2.42857rem;
    font-weight: 300;
    margin-bottom: 3.85714rem;
    position: relative; }
  .benefit__item {
    max-width: 250px;
    text-align: center;
    margin-left: auto;
    margin-right: auto; }
    @media (max-width: 1024px) {
      .benefit__item {
        margin-top: 2.85714rem; } }
    .benefit__item_left {
      float: left; }
      @media (max-width: 1024px) {
        .benefit__item_left {
          float: none; } }
    .benefit__item_right {
      float: right; }
      @media (max-width: 1024px) {
        .benefit__item_right {
          float: none; } }
  .benefit__icon {
    display: inline-block;
    vertical-align: top;
    margin-bottom: 1.42857rem; }
    .benefit__icon_q1 {
      background-image: url(../images/sprite.png);
      background-position: -136px 0px;
      width: 75px;
      height: 54px; }
    .benefit__icon_q2 {
      background-image: url(../images/sprite.png);
      background-position: -268px 0px;
      width: 59px;
      height: 57px; }
    .benefit__icon_q3 {
      background-image: url(../images/sprite.png);
      background-position: -63px -136px;
      width: 63px;
      height: 58px; }
    .benefit__icon_q4 {
      background-image: url(../images/sprite.png);
      background-position: -136px -54px;
      width: 63px;
      height: 64px; }
    .benefit__icon_q5 {
      background-image: url(../images/sprite.png);
      background-position: -211px 0px;
      width: 57px;
      height: 62px; }
    .benefit__icon_q6 {
      background-image: url(../images/sprite.png);
      background-position: -211px -62px;
      width: 57px;
      height: 60px; }
    .benefit__icon_q7 {
      background-image: url(../images/sprite.png);
      background-position: 0px -136px;
      width: 63px;
      height: 62px; }
    .benefit__icon_q8 {
      background-image: url(../images/sprite.png);
      background-position: -126px -136px;
      width: 67px;
      height: 54px; }
  .benefit__column {
    box-sizing: border-box;
    padding-left: 3.57143rem;
    padding-right: 3.57143rem; }
    .benefit__column_4 {
      display: inline;
      float: left;
      width: 33.33333%;
      margin: 0 0%; }
    .benefit__column_6 {
      display: inline;
      float: left;
      width: 50%;
      margin: 0 0%; }
    @media (max-width: 1024px) {
      .benefit__column {
        float: none;
        width: auto;
        display: block; } }

.button {
  background: transparent;
  outline: none;
  border: 0;
  background: #ffcd20;
  border-radius: 11px;
  padding: 0.57143em 2.14286em;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  display: inline-block;
  vertical-align: middle; }
  .button:hover {
    background: #ecb700; }
  .button_link {
    background: transparent;
    color: #fff;
    border-bottom: 1px solid;
    padding: 0;
    border-radius: 0;
    transition: border-color .2s; }
    .button_link:hover {
      background: transparent;
      border-color: transparent; }

.contacts {
  margin-left: 10.71429rem;
  display: inline-block;
  vertical-align: middle;
  padding-top: 2.85714rem;
  color: #fff; }
  @media (max-width: 1024px) {
    .contacts {
      margin-left: 0;
      display: block; } }
  .contacts__email {
    color: #fff;
    text-decoration: none;
    border-bottom: 1px solid;
    transition: border-color .2s; }
    .contacts__email:hover {
      border-color: transparent; }

.down-button {
  background: transparent;
  border: 0;
  padding: 0;
  width: 40px;
  height: 23px;
  margin-left: auto;
  margin-right: auto;
  display: block;
  position: relative;
  cursor: pointer;
  margin-top: 2.5rem;
  outline: none;
  -webkit-animation: bounce 2.5s ease infinite;
  animation: bounce 2.5s ease infinite; }
  .down-button:after {
    content: '';
    display: block;
    width: 28px;
    height: 28px;
    border: solid #ffcd20;
    border-width: 0 0 2px 2px;
    -webkit-transform: rotate(-45deg);
    -ms-transform: rotate(-45deg);
    transform: rotate(-45deg); }

@-webkit-keyframes bounce {
  0% {
    -webkit-transform: translateY(0);
    transform: translateY(0); }
  50% {
    -webkit-transform: translateY(-15px);
    transform: translateY(-15px); }
  100% {
    -webkit-transform: translateY(0);
    transform: translateY(0); } }

@keyframes bounce {
  0% {
    -webkit-transform: translateY(0);
    transform: translateY(0); }
  50% {
    -webkit-transform: translateY(-15px);
    transform: translateY(-15px); }
  100% {
    -webkit-transform: translateY(0);
    transform: translateY(0); } }

.faq {
  padding-top: 2.85714rem;
  padding-bottom: 5.71429rem;
  background: #fbfbfb; }
  .faq__holder {
    margin-left: auto;
    margin-right: auto;
    min-width: 290px;
    max-width: 1033px;
    padding-left: 1.07143rem;
    padding-right: 1.07143rem; }
  .faq__head {
    margin: 0;
    text-align: center;
    font-size: 2.42857rem;
    font-weight: 300;
    margin-bottom: 3.85714rem;
    position: relative; }
  .faq__item {
    margin-top: 2.14286rem; }
  .faq__title {
    font-size: 1.28571rem;
    font-weight: 500;
    margin-bottom: 1.57143rem; }
    .faq__title::after {
      clear: both;
      content: "";
      display: table; }
  .faq__label {
    color: #818181;
    float: left;
    margin-right: 0.35714rem; }
  .faq__question {
    overflow: hidden;
    color: #12aaeb; }
  .faq__answer {
    background: #fff;
    border-radius: 5px;
    border: 1px solid #cecece;
    font-size: 1.14286rem;
    padding: 1.57143rem 2.85714rem; }

.footer {
  background: #212121; }
  .footer__holder {
    margin-left: auto;
    margin-right: auto;
    min-width: 290px;
    max-width: 1033px;
    padding-left: 1.07143rem;
    padding-right: 1.07143rem; }
  .footer__top {
    padding-top: 1.42857rem;
    padding-bottom: 3rem; }
  .footer__row::after {
    clear: both;
    content: "";
    display: table; }
  .footer__left {
    float: left; }
    @media (max-width: 1024px) {
      .footer__left {
        float: none; } }
  .footer__right {
    float: right; }
    @media (max-width: 1024px) {
      .footer__right {
        float: none; } }
  .footer__bottom {
    text-align: center;
    background: #151515;
    padding: 0.71429rem 0; }
  .footer__agreement {
    color: #818181;
    transition: color .2s;
    text-decoration: none; }
    .footer__agreement:hover {
      color: #fff; }

.header {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  z-index: 1;
  padding-top: 1.07143rem;
  padding-bottom: 1.07143rem; }
  .header__holder {
    margin-left: auto;
    margin-right: auto;
    min-width: 290px;
    max-width: 1033px;
    padding-left: 1.07143rem;
    padding-right: 1.07143rem; }
  .header__row::after {
    clear: both;
    content: "";
    display: table; }
  .header__left {
    float: left; }
    @media (max-width: 1024px) {
      .header__left {
        float: none; } }
  .header__right {
    float: right; }
    @media (max-width: 1024px) {
      .header__right {
        float: none; } }

.hero {
  min-height: 850px;
  min-height: 100vh;
  background: #08354d;
  position: relative; }
  @media (max-width: 1024px) {
    .hero {
      padding-top: 15.71429rem; } }
  .hero__bottom {
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    padding-bottom: 3.07143rem; }

.how-it-works {
  background: #5bbff1;
  padding-top: 2.85714rem;
  padding-bottom: 10rem;
  color: #fff; }
  .how-it-works__title {
    font-size: 18px;
    font-weight: 700; }
  .how-it-works__list {
    overflow: hidden; }
  .how-it-works__holder {
    margin-left: auto;
    margin-right: auto;
    min-width: 290px;
    max-width: 1033px;
    padding-left: 1.07143rem;
    padding-right: 1.07143rem; }
  .how-it-works__head {
    margin: 0;
    text-align: center;
    font-size: 2.42857rem;
    font-weight: 300;
    margin-bottom: 5.35714rem;
    position: relative;
    z-index: 1; }
  .how-it-works__count {
    font-size: 5.14286rem;
    float: left;
    line-height: 1;
    margin-right: 1.28571rem; }
  .how-it-works__title {
    font-size: 2.64286rem;
    font-weight: 300;
    margin-bottom: 2rem; }
  .how-it-works__text {
    font-size: 1.28571rem; }
  .how-it-works__item::after {
    clear: both;
    content: "";
    display: table; }
  .how-it-works__item + .how-it-works__item {
    margin-top: 16.21429rem; }
    @media (max-width: 1024px) {
      .how-it-works__item + .how-it-works__item {
        margin-top: 3.57143rem; } }
  .how-it-works__box {
    overflow: hidden; }
  .how-it-works__info {
    float: left;
    width: 53%;
    min-height: 1px;
    position: relative;
    z-index: 1; }
    @media (max-width: 1024px) {
      .how-it-works__info {
        float: none;
        width: auto; } }
  .how-it-works__view {
    float: left;
    min-height: 1px;
    width: 47%;
    position: relative; }
    @media (max-width: 1024px) {
      .how-it-works__view {
        display: none; } }
  .how-it-works__image {
    position: absolute;
    z-index: 0; }
  .how-it-works__item_first .how-it-works__image {
    top: -150px;
    right: -20px; }
  .how-it-works__item_two .how-it-works__image {
    top: -65px;
    left: -80px; }
  .how-it-works__item_three .how-it-works__image {
    top: -130px;
    right: -30px; }

.logo__image {
  display: block; }

.logo__link {
  display: block; }

.menu {
  vertical-align: middle;
  display: inline-block;
  padding-top: 2.85714rem; }
  .menu__list {
    list-style: none;
    margin: 0;
    padding: 0; }
  .menu__item {
    display: inline-block;
    vertical-align: middle;
    list-style: none; }
    .menu__item + .menu__item {
      margin-left: 0.85714rem; }
  .menu__link {
    color: #fff;
    text-decoration: none; }

.tariffs {
  padding-top: 2.85714rem;
  padding-bottom: 5.71429rem;
  background: #f5f9fb; }
  .tariffs__holder {
    margin-left: auto;
    margin-right: auto;
    min-width: 290px;
    max-width: 1033px;
    padding-left: 1.07143rem;
    padding-right: 1.07143rem; }
  .tariffs__head {
    margin: 0;
    text-align: center;
    font-size: 2.42857rem;
    font-weight: 300;
    margin-bottom: 3.85714rem;
    position: relative; }
  .tariffs__row {
    margin-left: -0.42857rem;
    margin-right: -0.42857rem; }
    .tariffs__row::after {
      clear: both;
      content: "";
      display: table; }
    @media (max-width: 1024px) {
      .tariffs__row {
        margin-left: 0;
        margin-right: 0; } }
  .tariffs__column {
    padding-left: 0.42857rem;
    padding-right: 0.42857rem;
    box-sizing: border-box;
    display: inline;
    float: left;
    width: 25%;
    margin: 0 0%; }
    @media (max-width: 1024px) {
      .tariffs__column {
        float: none;
        width: auto;
        display: block;
        padding-left: 0;
        padding-right: 0;
        margin-top: 2.85714rem; } }
  .tariffs__item {
    box-shadow: 5px 3px 13px 0px rgba(0, 0, 0, 0.2);
    text-align: center; }
  .tariffs__info {
    border: solid #cfcfcf;
    border-width: 0 1px 1px 1px;
    box-sizing: border-box; }
  .tariffs__title {
    color: #fff;
    font-size: 1.57143rem;
    text-transform: uppercase;
    padding: 0.5rem 0.35714rem; }
  .tariffs__total {
    color: #fff;
    padding: 2.5rem 0.35714rem; }
  .tariffs__price {
    font-size: 4.42857rem;
    line-height: 1; }
  .tariffs__label {
    font-size: 1.14286rem; }
  .tariffs__info {
    background: #fff;
    padding: 2.14286rem 0.35714rem; }
  .tariffs__limit {
    font-size: 1.64286rem;
    font-weight: 700;
    text-transform: uppercase; }
  .tariffs__text {
    text-transform: uppercase;
    margin-bottom: 2.35714rem; }
  .tariffs__item_green .tariffs__title {
    background: #457417; }
  .tariffs__item_green .tariffs__total {
    background: #6cb920; }
  .tariffs__item_purple .tariffs__title {
    background: #6f3887; }
  .tariffs__item_purple .tariffs__total {
    background: #5c2973; }
  .tariffs__item_orange .tariffs__title {
    background: #bc4628; }
  .tariffs__item_orange .tariffs__total {
    background: #de6141; }
  .tariffs__item_blue .tariffs__title {
    background: #165673; }
  .tariffs__item_blue .tariffs__total {
    background: #287ca1; }

.tools {
  margin-left: 6.21429rem;
  display: inline-block;
  vertical-align: middle;
  padding-top: 2.85714rem; }
  @media (max-width: 320px) {
    .tools {
      margin-left: 1.92857rem; } }
  .tools__button {
    font-weight: 400;
    border-radius: 11px;
    padding: 0.35714em 1.35714em; }
    .tools__button + .tools__button {
      margin-left: 0.85714rem; }
    .tools__button_auth {
      position: relative;
      padding: 0;
      border-radius: 0; }
      .tools__button_auth:before {
        content: '';
        position: absolute;
        left: -27px;
        top: 5px;
        display: inline-block;
        vertical-align: middle;
        background-image: url(../images/sprite.png);
        background-position: -268px -172px;
        width: 20px;
        height: 9px; }

.use {
  padding-top: 2.85714rem;
  padding-bottom: 5.71429rem;
  background: #f5f9fb; }
  .use__holder {
    margin-left: auto;
    margin-right: auto;
    min-width: 290px;
    max-width: 1033px;
    padding-left: 1.07143rem;
    padding-right: 1.07143rem; }
  .use__list {
    overflow: hidden; }
    .use__list::after {
      clear: both;
      content: "";
      display: table; }
  .use__item {
    text-align: center;
    display: inline;
    float: left;
    width: 25%;
    margin: 0 0%;
    position: relative; }
    @media (max-width: 1024px) {
      .use__item {
        display: block;
        float: none;
        width: auto;
        margin-top: 2.14286rem; } }
    .use__item:nth-child(odd) {
      margin-top: 5rem; }
      @media (max-width: 1024px) {
        .use__item:nth-child(odd) {
          margin-top: 2.14286rem; } }
    .use__item:nth-child(even):before, .use__item:nth-child(even):after {
      content: '';
      width: 110px;
      height: 2px;
      background: #b9e1f4;
      position: absolute;
      top: 70px; }
      @media (max-width: 1024px) {
        .use__item:nth-child(even):before, .use__item:nth-child(even):after {
          display: none; } }
    .use__item:nth-child(even):before {
      left: -60px;
      -webkit-transform: rotate(-18deg);
      -ms-transform: rotate(-18deg);
      transform: rotate(-18deg); }
    .use__item:nth-child(even):after {
      right: -60px;
      -webkit-transform: rotate(18deg);
      -ms-transform: rotate(18deg);
      transform: rotate(18deg); }
    .use__item:last-child:after {
      display: none; }
  .use__head {
    margin: 0;
    text-align: center;
    font-size: 2.42857rem;
    font-weight: 300;
    margin-bottom: 3.85714rem;
    position: relative;
    z-index: 1; }
  .use__link {
    color: #0ca5e5; }
  .use__icon {
    display: inline-block;
    vertical-align: middle;
    margin-bottom: 0.42857rem; }
    .use__icon_target {
      background-image: url(../images/sprite.png);
      background-position: 0px -68px;
      width: 68px;
      height: 68px; }
    .use__icon_case {
      background-image: url(../images/sprite.png);
      background-position: 0px 0px;
      width: 68px;
      height: 68px; }
    .use__icon_stat {
      background-image: url(../images/sprite.png);
      background-position: -68px -68px;
      width: 68px;
      height: 68px; }
    .use__icon_increase {
      background-image: url(../images/sprite.png);
      background-position: -68px 0px;
      width: 68px;
      height: 68px; }
  .use__title {
    font-size: 1.28571rem;
    font-weight: 700; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
